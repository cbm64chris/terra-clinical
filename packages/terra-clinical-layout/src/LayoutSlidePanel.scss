/* stylelint-disable selector-class-pattern */

:local {
  $hover-target-width: var(--layout-slide-hover-target-width, 30px);

  .layout-slide-panel {
    height: 100%;
    overflow: hidden;
    position: relative;
    width: 100%;
  }

  .content,
  .panel {
    box-sizing: border-box;
    height: 100%;
    overflow: hidden;
    transition: none;
  }

  .is-animated {
    transition: transform 0.15s ease;
  }

  .content {
    float: right;
    position: relative;
    width: 100%;
    z-index: 0;
  }

  .panel {
    background-color: var(--layout-slide-panel-background-color, #fff);
    position: absolute;
    transform: translate3d(-100%, 0, 0);
    width: var(--layout-slide-panel-desktop-panel-width, 260px);
    z-index: 5000;
  }

  // Move the slider back to its origin when its on-screen.
  .is-open > .panel {
    transform: translate3d(0, 0, 0);
  }

  .hover-toggle-enabled.is-overlay {
    > .content {
      width: calc(100% - #{$hover-target-width});// allow for hover bar
    }

    > .panel {
      transform: translateX(-100%) translateX($hover-target-width);
    }

    &.is-open > .panel {
      transform: translate3d(0, 0, 0);
    }
  }

  // Due to conflicts with the RTL plugin and the use of the variable, we need to explicitly
  // specify the rtl-based transform value.
  [dir=rtl] {
    .hover-toggle-enabled.is-overlay {
      > .panel {
        transform: translateX(100%) translateX(calc(-1 * #{$hover-target-width}));
      }
    }
  }

  .panel.is-tiny {
    width: var(--layout-slide-panel-phone-panel-width, calc(100% - 50px));
  }

  .panel.is-small {
    width: var(--layout-slide-panel-tablet-panel-width, 320px);
  }

  // Overlay
  .is-open.is-overlay > .panel {
    box-shadow: 1px 0 5px var(--layout-slide-panel-panel-shadow-color, #bcbfc0);
  }

  // Squish
  .is-open.is-squish {
    > .content {
      width: calc(100% - #{var(--layout-slide-panel-desktop-panel-width, 260px)} - 1px);
    }

    > .panel {
      border-right: 1px solid var(--layout-slide-panel-panel-border-color, #d3d4d5);
      width: calc(1px + #{var(--layout-slide-panel-desktop-panel-width, 260px)});
      transition: none;
    }
  }
}
